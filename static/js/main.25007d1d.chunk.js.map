{"version":3,"sources":["images/react-movie-logo.svg","images/tmdb_logo.svg","components/Header/Header.styles.js","components/Header/Header.js","config.js","components/HeroImage/HeroImage.styles.js","components/HeroImage/HeroImage.js","components/Grid/Grid.styles.js","components/Grid/Grid.js","components/Thumb/Thumb.styles.js","components/Thumb/Thumb.js","components/Spinner/Spinner.js","components/Spinner/Spinner.styles.js","images/search-icon.svg","components/SearchBar/SearchBar.styles.js","components/SearchBar/SearchBar.js","components/Button/Button.styles.js","components/Button/Button.js","API.js","hooks/useHomeFetch.js","images/no_image.jpg","components/Home.js","components/BreadCrumb/BreadCrumb.styles.js","components/BreadCrumb/BreadCrumb.js","components/MovieInfo/MovieInfo.styles.js","components/MovieInfo/MovieInfo.js","helpers.js","components/MovieInfoBar/MovieInfoBar.styles.js","components/MovieInfoBar/MovieInfoBar.js","components/Actor/Actor.styles.js","components/Actor/Actor.js","components/Movie.js","hooks/useMovieFetch.js","components/NotFound.js","GlobalStyles.js","App.js","index.js"],"names":["Wrapper","styled","div","Content","LogoImg","img","TMDBLogoImg","Header","to","src","RMDBLogo","alt","TMDBLogo","API_URL","API_KEY","SEARCH_BASE_URL","POPULAR_BASE_URL","REQUEST_TOKEN_URL","LOGIN_URL","SESSION_ID_URL","IMAGE_BASE_URL","BACKDROP_SIZE","POSTER_SIZE","image","Text","HeroImage","title","text","Grid","header","children","Image","Thumb","movieID","clickabale","Spinner","SearchBar","setSearchTerm","useState","state","setState","initial","useRef","useEffect","current","timer","setTimeout","clearTimeout","SearchIcon","type","placeholder","onChange","e","currentTarget","value","button","Button","callback","onClick","defaultConfig","method","headers","apiSettings","fetchMovies","searchTerm","page","a","endpoint","fetch","json","fetchMovie","movieId","fetchCredits","creditsEndpoint","getRequestToken","reqToken","request_token","authenticate","requestToken","username","password","bodyData","body","JSON","stringify","success","sessionId","rateMovie","rating","initialState","results","total_pages","total_results","Home","loading","setLoading","error","setError","isLoadingMore","setIsLoadingMore","API","movies","prev","useHomeFetch","backdrop_path","original_title","overview","map","movie","poster_path","NoImage","id","BreadCrumb","movieTitle","backdrop","MovieInfo","className","vote_average","directors","length","director","name","credit_id","calcTime","time","hours","Math","floor","mins","convertMoney","money","Intl","NumberFormat","style","currency","minimumFractionDigits","format","MovieInfoBar","budget","revenue","Actor","character","imageURL","Movie","credits","crew","filter","member","job","actors","cast","useMovieFetch","useParams","runtime","actor","profile_path","NotFound","GlobalStyle","createGlobalStyle","App","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.25007d1d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/react-movie-logo.42955eb6.svg\";","export default __webpack_public_path__ + \"static/media/tmdb_logo.f15b6632.svg\";","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n    background: var(--darkGrey);\n    padding: 0 20px;\n`;\n\nexport const Content = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    max-width: var(--maxWidth);\n    padding: 20px 0;\n    margin: 0 auto;\n`\n;\n\nexport const LogoImg = styled.img`\n    width: 200px;\n\n    @media (max-width: 500px){\n        width: 150px;\n    }\n`;\n\nexport const TMDBLogoImg = styled.img`\n     width: 100px;\n\n     @media (max-width: 500px){\n         width: 80px;\n     }\n`;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport RMDBLogo from '../../images/react-movie-logo.svg';\nimport TMDBLogo from '../../images/tmdb_logo.svg';\n\nimport { Wrapper,Content, LogoImg, TMDBLogoImg } from './Header.styles';\n\nconst Header = () => (\n    <Wrapper>\n        <Content>\n            <Link to='/'>\n                <LogoImg src={RMDBLogo} alt=\"rmdb-logo\" />\n            </Link>\n            <TMDBLogoImg src={TMDBLogo} alt=\"tmdb-logo\" />\n        </Content>\n    </Wrapper>\n);\n\nexport default Header;","// Configuration for TMDB API\n// Read more about the API here: https://developers.themoviedb.org/\n\nconst API_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'efcb59f0a723664f9d483ec68b462218';\n//process.env.REACT_APP_API_KEY;\n\n\nconst SEARCH_BASE_URL = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=`;\nconst POPULAR_BASE_URL = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US`;\n// For login and voting\nconst REQUEST_TOKEN_URL = `${API_URL}authentication/token/new?api_key=${API_KEY}`;\nconst LOGIN_URL = `${API_URL}authentication/token/validate_with_login?api_key=${API_KEY}`;\nconst SESSION_ID_URL = `${API_URL}authentication/session/new?api_key=${API_KEY}`;\n\nconst IMAGE_BASE_URL = 'http://image.tmdb.org/t/p/';\n// Sizes: w300, w780, w1280, original\nconst BACKDROP_SIZE = 'w1280';\n// w92, w154, w185, w342, w500, w780, original\nconst POSTER_SIZE = 'w780';\n\nexport {\n  SEARCH_BASE_URL,\n  POPULAR_BASE_URL,\n  API_URL,\n  API_KEY,\n  IMAGE_BASE_URL,\n  BACKDROP_SIZE,\n  POSTER_SIZE,\n  REQUEST_TOKEN_URL,\n  LOGIN_URL,\n  SESSION_ID_URL,\n};\n","import styled from 'styled-components';\n\n\nexport const Wrapper = styled.div`\n    background: linear-gradient(\n        to bottom, rgba(0,0,0,0)\n        41%, rgba(0,0,0,0.65)\n        100%\n        ),\n        url(${({image}) => image}),\n        var(--darkGrey);\n    background-size: 100%, cover;\n    background-position: center;\n    height: 600px;\n    position: relative;\n    animation: animateHeroImage 1s;\n\n\n    @keyframes animateHeroImage {\n        from {\n            opacity: 0;\n        }\n        to {\n            opacity: 1;\n        }\n    }\n`;\n\nexport const Content = styled.div`\n    padding: 20px;\n    max-width: var(--maxWidth);\n    margin: 0 auto;\n`;\n\nexport const Text = styled.div`\n    z-index: 100;\n    position: absolute;\n    bottom: 40px;\n    margin-right: 20px;\n    min-height: 100px;\n    color: var(--white);\n    max-width: 700px;\n    \n    h1 {\n        font-size: var(--fontXL);\n\n        @media (max-width: 720px){\n            font-size: var(--fontL);\n        }\n\n    }\n\n    p {\n        font-size: var(--fontM);\n\n        @media (max-width: 720px){\n            font-size: var(--fontS);\n        }\n\n    }\n\n    @media (max-width: 720px){\n        max-width: 100%;\n    }\n`;","import React from \"react\";\n\n//Styles\nimport { Wrapper,Content,Text } from \"../HeroImage/HeroImage.styles\";\n\nconst HeroImage = ({image,title,text}) => {\n    return <Wrapper image={image}>\n                <Content>\n                    <Text>\n                        <h1>{title}</h1>\n                        <p>{text}</p>\n                    </Text>\n                </Content>\n            </Wrapper>\n}\n\nexport default HeroImage;","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n    max-width: var(--maxWidth);\n    margin: 0 auto;\n    padding: 0 20px;\n\n    h1 {\n        color: var(--medGrey);\n\n        @media (max-width:  768px){\n            font-size: var(--fontL);\n        }\n    }\n`;\n\nexport const Content = styled.div`\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(150px,1fr));\n    gap: 2rem;\n`;\n\n","import React from \"react\";\n\n//Styles\nimport { Wrapper, Content } from \"../Grid/Grid.styles\";\n\nconst Grid = ({header, children}) => {\n    return <Wrapper>\n                <h1>{header}</h1>\n                <Content>{children}</Content>\n            </Wrapper>\n}\n\nexport default Grid;","import styled from 'styled-components';\n\n\nexport const Image = styled.img`\n    width: 100%;\n    height: 100%;\n    max-width: 720px;\n    transition: all 0.3s;\n    object-fit: cover;\n    border-radius: 20px;\n    animation: animateThumb 0.5s;\n\n    :hover {\n        opacity: .8;\n    }\n    \n    @keyframes animateThumb {\n        from {\n            opacity: 0;\n        }\n        to {\n            opacity: 1;\n        }\n    }\n`","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n//Styles\nimport {Image} from '../Thumb/Thumb.styles'\n\n\nconst Thumb = ({image,movieID, clickabale}) => (\n    <div>\n        {clickabale?\n            <Link to={`/${movieID}`}>\n                <Image src={image} alt='movie-thumb'/>\n            </Link>\n            : <Image src={image} alt='movie-thumb'/>\n        }\n    </div>\n)\n  \nexport default Thumb;","import { Spinner } from \"./Spinner.styles\";\n\nexport default Spinner;","import styled from \"styled-components\";\n\nexport const Spinner = styled.div`\n    border: 5px solid var(--lightGrey);\n    border-top: 5px solid var(--medGrey);\n    width: 50px;\n    height: 50px;\n    border-radius: 50%;\n    animation: spin 0.8s linear infinite;\n    margin: 20px auto;\n\n\n    @keyframes spin {\n        0% {\n            transform: rotate(0deg);\n        }\n\n        100% {\n            transform: rotate(360deg);\n        }\n    }\n`","export default __webpack_public_path__ + \"static/media/search-icon.cd820f5a.svg\";","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n    display: flex;\n    align-items: center;\n    height: 100px;\n    background: var(--darkGrey);\n    padding: 0 20px;\n`;\n\nexport const Content= styled.div`\n    position: relative;\n    max-width: var(--maxWidth);\n    width: 100%;\n    height: 55px;\n    background: var(--medGrey);\n    margin: 0 auto;\n    border-radius: 40px;\n    color: var(--white);\n\n    img {\n        position: absolute;\n        left: 15px;\n        top: 14px;\n        width: 30px;\n    }\n\n    input {\n        font-size: var(--fontL);\n        position: absolute;\n        left: 0;\n        margin: 8px 0;\n        padding: 0 0 0 60px;\n        border: 0;\n        width: 95%;\n        background: transparent;\n        height: 40px;\n        color: var(--white);\n\n        :focus {\n            outline: none;\n        }\n    }\n`;","import React, {useState, useEffect, useRef} from 'react';\n\n//Image\nimport SearchIcon from '../../images/search-icon.svg';\n\n//Styles\nimport {Wrapper, Content} from './SearchBar.styles';\n\n\nconst SearchBar = ({setSearchTerm}) => {\n    const [state,setState] = useState('');\n    const initial = useRef(true)\n\n    useEffect(() => {\n        if(initial.current){\n            initial.current = false;\n            return\n        }\n        \n        const timer = setTimeout(()=>{\n            setSearchTerm(state)\n        },500)\n\n        return () => clearTimeout(timer)\n    },[setSearchTerm,state])\n\n    return (\n        <Wrapper>\n            <Content>\n                <img src={SearchIcon} alt='search-icon' />\n                <input\n                    type=\"text\"\n                    placeholder='Search Movie' \n                    onChange={e => setState(e.currentTarget.value)}\n                    value={state}\n                    />\n            </Content>\n        </Wrapper>\n    )\n}\n\nexport default SearchBar;","import styled from \"styled-components\";\n\nexport const Wrapper = styled.button`\n    display: block;\n    background: var(--darkGrey);\n    width: 25%;\n    min-width: 200px;\n    height: 60px;\n    border-radius: 30px;\n    color: var(--white);\n    border: 0;\n    font-size: var(--fontL);\n    margin: 20px auto;\n    outline: none;\n    cursor: pointer;\n    transition: all 0.3s;\n\n    :hover {\n        opacity: .8;\n    }\n`;","import { Wrapper} from './Button.styles';\n\n\nconst Button = ({text,callback}) => (\n    <Wrapper type=\"button\" onClick={callback}>\n        {text}\n    </Wrapper>\n)\nexport default Button;","import {\n  SEARCH_BASE_URL,\n  POPULAR_BASE_URL,\n  API_URL,\n  API_KEY,\n  REQUEST_TOKEN_URL,\n  LOGIN_URL,\n  SESSION_ID_URL\n} from './config';\n\nconst defaultConfig = {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n};\n\nconst apiSettings = {\n  fetchMovies: async (searchTerm, page) => {\n    const endpoint = searchTerm\n      ? `${SEARCH_BASE_URL}${searchTerm}&page=${page}`\n      : `${POPULAR_BASE_URL}&page=${page}`;\n    return await (await fetch(endpoint)).json();\n  },\n  fetchMovie: async movieId => {\n    const endpoint = `${API_URL}movie/${movieId}?api_key=${API_KEY}`;\n    return await (await fetch(endpoint)).json();\n  },\n  fetchCredits: async movieId => {\n    const creditsEndpoint = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`;\n    return await (await fetch(creditsEndpoint)).json();\n  },\n  // Bonus material below for login\n  getRequestToken: async () => {\n    const reqToken = await (await fetch(REQUEST_TOKEN_URL)).json();\n    return reqToken.request_token;\n  },\n  authenticate: async (requestToken, username, password) => {\n    const bodyData = {\n      username,\n      password,\n      request_token: requestToken\n    };\n    // First authenticate the requestToken\n    const data = await (\n      await fetch(LOGIN_URL, {\n        ...defaultConfig,\n        body: JSON.stringify(bodyData)\n      })\n    ).json();\n    // Then get the sessionId with the requestToken\n    if (data.success) {\n      const sessionId = await (\n        await fetch(SESSION_ID_URL, {\n          ...defaultConfig,\n          body: JSON.stringify({ request_token: requestToken })\n        })\n      ).json();\n      return sessionId;\n    }\n  },\n  rateMovie: async (sessionId, movieId, value) => {\n    const endpoint = `${API_URL}movie/${movieId}/rating?api_key=${API_KEY}&session_id=${sessionId}`;\n\n    const rating = await (\n      await fetch(endpoint, {\n        ...defaultConfig,\n        body: JSON.stringify({ value })\n      })\n    ).json();\n\n    return rating;\n  }\n};\n\nexport default apiSettings;\n","import { useState, useEffect, useRef } from \"react\";\n\n//API\nimport API from '../API';\n\nconst initialState = {\n    page: 0,\n    results: [],\n    total_pages: 0,\n    total_results: 0\n}\n\nexport const useHomeFetch = () => {\n    const [searchTerm, setSearchTerm] = useState('')\n    const [state, setState] = useState(initialState);\n    const [loading,setLoading] = useState(false);\n    const [error,setError] = useState(false);\n    const [isLoadingMore, setIsLoadingMore] = useState(false);\n\n    const fetchMovies = async (page, searchTerm = \"\") => {\n        try {\n            setError(false);\n            setLoading(true);\n            const movies = await API.fetchMovies(searchTerm,page);\n            setState(prev => ({\n                ...movies,\n                results: page > 1? [...prev.results,...movies.results]: [...movies.results]\n            }))\n        } catch (error) {\n            setError(true)\n        }\n        setLoading(false);\n    }\n\n    //Initial render and search\n    useEffect(()=>{\n        setState(initialState);\n        fetchMovies(1,searchTerm)\n    },[searchTerm]);\n\n    useEffect(() => {\n        if(!isLoadingMore) return\n        fetchMovies(state.page + 1,searchTerm);\n        setIsLoadingMore(false);\n    },[isLoadingMore,state.page,searchTerm])\n    return {state,loading,error,searchTerm, setSearchTerm, setIsLoadingMore}\n}","export default __webpack_public_path__ + \"static/media/no_image.22d2aa4d.jpg\";","import React from 'react';\n\n\n//Config \nimport {POSTER_SIZE, BACKDROP_SIZE, IMAGE_BASE_URL} from '../config';\n\n//Components\nimport HeroImage from './HeroImage/HeroImage';\nimport Grid from './Grid/Grid';\nimport Thumb from './Thumb/Thumb';\nimport Spinner from './Spinner/Spinner';\nimport SearchBar from './SearchBar/SearchBar';\nimport Button from './Button/Button';\n\n//Hook\nimport {useHomeFetch} from '../hooks/useHomeFetch'\n//Image\nimport NoImage from '../images/no_image.jpg';\n\nconst Home = () => {\n    const {state,loading,error, searchTerm, setSearchTerm, setIsLoadingMore} = useHomeFetch();\n   \n    if(error) return <div>Something went wrong</div>\n    return (\n        <>\n            {state.results[0]? \n\n            <HeroImage \n                image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${state.results[0].backdrop_path}`}\n                title={state.results[0].original_title}\n                text={state.results[0].overview}\n            />\n            : null}\n            <SearchBar setSearchTerm={setSearchTerm}/>\n            <Grid header={searchTerm? 'Search Result':'Popular Movies'}>\n                {state.results.map(movie => (\n                    <Thumb \n                        key={movie.id} \n                        clickabale\n                        image={\n                            movie.poster_path? IMAGE_BASE_URL + POSTER_SIZE + movie.poster_path\n                            : NoImage\n                        }\n                        movieID={movie.id}\n                    />\n                ))}\n            </Grid>\n            \n            {loading && <Spinner />}\n            {state.page < state.total_pages && !loading && \n                (<Button text=\"Load More\" callback={() => setIsLoadingMore(true)}/>)}\n        </>\n    )\n}\n\nexport default Home;","import styled from \"styled-components\";\n\n\nexport const Wrapper = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 100%;\n    height: 70px;\n    background: var(--medGrey);\n    color: var(--white);\n`;\n\nexport const Content = styled.div`\n    display: flex;\n    width: 100%;\n    max-width: var(--maxWidth);\n    padding: 0 20px;\n\n    span {\n        font-size: var(--fontM);\n        color: var(--white);\n        padding-right: 10px;\n\n        @media (max-width: 768px){\n            font-size: var(--fontS);\n        }\n    }\n\n    a {\n        color: var(--white);\n    }\n`;","import React from \"react\";\n\n//Rounting\nimport { Link } from \"react-router-dom\";\n\n//Styles\nimport {Wrapper, Content} from './BreadCrumb.styles';\n\nconst BreadCrumb = ({movieTitle}) => (\n    <Wrapper>\n        <Content>\n            <Link to='/'>\n                <span>Home</span>\n            </Link>\n            <span>|</span>\n            <span>{movieTitle}</span>\n        </Content>\n    </Wrapper>\n)\n\nexport default BreadCrumb;","import styled from \"styled-components\";\nimport { IMAGE_BASE_URL, BACKDROP_SIZE } from \"../../config\";\n\n\nexport const Wrapper = styled.div`\n    background: ${({backdrop}) =>\n    backdrop? `url(${IMAGE_BASE_URL}${BACKDROP_SIZE}${backdrop})`:'#000'};\n    background-size: cover;\n    background-position: center;\n    padding: 40px 20px;\n    animation: animateInfo 1s;\n\n    @keyframes animateInfo{\n        from {\n            opacity: 0;\n        }\n        to {\n            opacity: 1;\n        }\n    }\n`;\n\nexport const Content = styled.div`\n    display: flex;\n    max-width: var(--maxWidth);\n    margin: 0 auto;\n    background: rgba(0,0,0,0.7);\n    border-radius: 20px;\n\n    @media (max-width: 768px){\n        display: block;\n        max-height: none;\n    }\n`;\n\nexport const Text = styled.div`\n    width: 100%;\n    color: var(--white);\n    overflow: hidden;\n    padding: 20px 40px;\n\n    .rating-directors {\n        display: flex;\n        justify-content: flex-start;\n    }\n\n    .score {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        width: 35px;\n        height: 35px;\n        background: #fff;\n        color: #000;\n        font-weight: 800;\n        border-radius: 50%;\n        margin: 0\n    }\n\n    .director {\n        margin: 0 0 0 40px;\n\n        p {\n            margin: 0\n        }\n    }\n\n    h1 {\n        @media (max-width: 768px){\n            font-size: var(--fontL);\n        }\n    }\n`;","import React from \"react\";\n//Components\nimport Thumb from \"../Thumb/Thumb\";\n//Config\nimport { IMAGE_BASE_URL, POSTER_SIZE} from \"../../config\";\n//No Image\nimport NoImage from '../../images/no_image.jpg';\n//Styles\nimport {Wrapper, Content, Text} from './MovieInfo.styles';\n\nconst MovieInfo = ({movie}) => (\n    <Wrapper backdrop={movie.backdrop_path}>\n        <Content>\n            <Thumb \n                image={\n                    movie.poster_path?\n                    `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}`\n                    : NoImage\n                }\n                clickabale={false}\n            />\n            <Text>\n                <h1>{movie.title}</h1>\n                <h3>PLOT</h3>\n                <p>{movie.overview}</p>\n\n                <div className=\"rating-directors\">\n                    <div>\n                        <h3>RATING</h3>\n                        <div className=\"score\">{movie.vote_average}</div>\n                    </div>\n                    <div className=\"director\">\n                        <h3>DIRECTOR{movie.directors.length > 1? 'S':''}</h3>\n                        {movie.directors.map(director => (\n                            <p key={director.credit_id}>{director.name}</p>\n                        ))}\n                    </div>\n                </div>\n            </Text>\n        </Content>\n    </Wrapper>\n)\n\nexport default MovieInfo","// Convert time to hours and minutes\nexport const calcTime = time => {\n  const hours = Math.floor(time / 60);\n  const mins = time % 60;\n  return `${hours}h ${mins}m`;\n};\n// Convert a number to money formatting\nexport const convertMoney = money => {\n  const formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 0,\n  });\n  return formatter.format(money);\n};\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n    display: flex;\n    align-items: center;\n    min-height: 100px;\n    background: var(--darkGrey);\n    padding: 0 20px;\n`;\n\nexport const Content = styled.div`\n    display: flex;\n    max-width: var(--maxWidth);\n    width: 100%;\n    margin: 0 auto;\n\n    .column {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        background: var(--medGrey);\n        margin: 0 20px;\n        flex: 1;\n        border-radius: 20px;\n\n        :first-child {\n            margin-left: 0%;\n        }\n\n        :last-child {\n            margin-right: 0;\n        }\n    }\n\n    @media (max-width: 768px){\n        display: block;\n\n        .column {\n            margin: 20px 0;\n        }\n    }\n`;","import React from \"react\";\n//helpers\nimport {calcTime,convertMoney} from '../../helpers';\n//Styles\nimport {Wrapper,Content} from './MovieInfoBar.styles';\n\nconst MovieInfoBar = ({time,budget,revenue}) => (\n    <Wrapper>\n        <Content>\n            <div className=\"column\">\n                <p>Running time: {calcTime(time)}</p>\n            </div>\n            <div className=\"column\">\n                <p>Budget: {convertMoney(budget)}</p>\n            </div>\n            <div className=\"column\">\n                <p>Revenue: {convertMoney(revenue)}</p>\n            </div>\n        </Content>\n    </Wrapper>\n)\n\nexport default MovieInfoBar;","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n    color: var(--white);\n    background: var(--darkGrey);\n    border-radius: 20px;\n    padding: 5px;\n    text-align: center;\n\n    h3 {\n        margin: 10px 0 0 0;\n    }\n\n    p {\n        margin: 5px 0;\n    }\n`;\n\nexport const Image = styled.img`\n    display: block;\n    width: 100%;\n    height: 200px;\n    object-fit: cover;\n    border-radius: 15px;\n`;","import React from \"react\";\n//Styles\nimport {Wrapper,Image} from './Actor.styles';\n\n\nconst Actor = ({name,character, imageURL}) => (\n    <Wrapper>\n        <Image src={imageURL} alt='actor-thumb'/>\n        <h3>{name}</h3>\n        <p>{character}</p>\n    </Wrapper>\n)\n\nexport default Actor;","import React from \"react\";\nimport { useParams } from \"react-router\";\n\n//Config\nimport {POSTER_SIZE, IMAGE_BASE_URL} from '../config';\n\n//Components\nimport Grid from \"./Grid/Grid\";\nimport Spinner from \"./Spinner/Spinner\";\nimport BreadCrumb from \"./BreadCrumb/BreadCrumb\";\nimport MovieInfo from \"./MovieInfo/MovieInfo\";\nimport MovieInfoBar from \"./MovieInfoBar/MovieInfoBar\";\nimport Actor from \"./Actor/Actor\";\n\n//Hooks\nimport { useMovieFetch } from \"../hooks/useMovieFetch\";\n\n//No Image\nimport NoImage from '../images/no_image.jpg';\nconst Movie = () => {\n    const {movieID} = useParams();\n    const { state: movie, loading, error} = useMovieFetch(movieID);\n\n    if(loading) return <Spinner />\n    if(error) return <div>Something went wrong...</div>\n\n    return (\n        <>\n            <BreadCrumb movieTitle={movie.original_title} />\n            <MovieInfo movie={movie} />\n            <MovieInfoBar time={movie.runtime} budget={movie.budget} revenue={movie.revenue}/>\n            <Grid header='Actors'>\n                {movie.actors.map(actor => (\n                    <Actor \n                        key={actor.credit_id}\n                        name={actor.name}\n                        character={actor.character}\n                        imageURL={\n                            actor.profile_path?\n                            `${IMAGE_BASE_URL}${POSTER_SIZE}${actor.profile_path}`\n                            : NoImage\n                        }\n                        />\n                ))}\n            </Grid>\n            \n        </>\n    )\n}\n\nexport default Movie;","import { useState, useEffect} from \"react\";\n\n//API\nimport API from '../API';\n\nexport const useMovieFetch = movieID => {\n    const [state, setState] = useState({});\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(false);\n\n    useEffect(() => {\n        const fetchMovie = async () => {\n            try {\n                setLoading(true);\n                setError(false);\n                const movie = await API.fetchMovie(movieID);\n                const credits = await API.fetchCredits(movieID);\n\n                //Get Directors\n                const directors = credits.crew.filter(member => member.job === 'Director');\n\n                setState({\n                    ...movie,\n                    directors,\n                    actors: credits.cast\n                })\n\n                setLoading(false)\n            }\n            catch (error){\n                setError(true);\n            }\n        }\n        fetchMovie();\n    }, [movieID])\n\n    return { state, loading, error}\n}","import React from \"react\";\n\nconst NotFound = () => (\n    <div>Movie Not Found</div>\n)\n\nexport default NotFound;","import { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalStyle = createGlobalStyle`\n    :root {\n        --maxWidth: 1280px;\n        --white: #fff;\n        --lightGrey: #eee;\n        --medGrey: #353535;\n        --darkGrey: #1c1c1c;\n        --fontXL: 2.5rem;\n        --fontL: 1.5rem;\n        --fontM: 1.2rem;\n        --fontS: 1rem;\n    }\n\n    * {\n        box-sizing: border-box;\n        font-family: 'Abel', sans-serif;\n    }\n\n    body {\n        margin: 0;\n        padding: 0;\n\n        h1 {\n            font-size: 2rem;\n            font-weight: 600;\n            color: var(--white);\n        }\n\n        h3 {\n            font-size: 1.1rem;\n            font-weight: 600;\n        }\n\n        p {\n            font-size: 1rem;\n            color: var(--white);\n        }\n    }\n`\n","import React from 'react';\n\n//Routing\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\n//Components\nimport Header from './components/Header/Header';\nimport Home from './components/Home';\nimport Movie from './components/Movie';\nimport NotFound from './components/NotFound';\n//Styles\nimport { GlobalStyle } from './GlobalStyles';\n\nconst App = () => ( \n  <Router>\n    <Header />\n    <Routes>\n      <Route path='/' element={<Home />} />\n      <Route path='/:movieID' element={<Movie/>} />\n      <Route path='/*' element={<NotFound/>} />\n    </Routes>\n    <GlobalStyle />\n  </Router>)\n  \n   \n  \n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}